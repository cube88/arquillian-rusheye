/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.jboss.rusheye.manager.gui.view;

import org.jboss.rusheye.manager.gui.view.image.ImagePool;
import org.jboss.rusheye.manager.gui.view.image.ImageView;

/**
 * Bottom menu under every image view.
 * 
 * @author Jakub D.
 */
public class BottomMenu extends javax.swing.JPanel {

    private ImageView view;

    /**
     * 
     * @param view parent view
     * @param viewType type of viewed image
     */
    public BottomMenu(ImageView view, String viewType) {
        this.view = view;
        initComponents();

        if (viewType.equals(ImagePool.PATTERN))
            patternRadio.setSelected(true);
        else if (viewType.equals(ImagePool.SAMPLE))
            sampleRadio.setSelected(true);
        else if (viewType.equals(ImagePool.DIFF))
            diffRadio.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        radioGroup = new javax.swing.ButtonGroup();
        patternRadio = new javax.swing.JRadioButton();
        sampleRadio = new javax.swing.JRadioButton();
        diffRadio = new javax.swing.JRadioButton();
        maskCheck = new javax.swing.JCheckBox();
        focusButton = new javax.swing.JButton();

        setLayout(new java.awt.GridLayout(1, 0));

        radioGroup.add(patternRadio);
        patternRadio.setText("Pattern");
        patternRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patternRadioActionPerformed(evt);
            }
        });
        add(patternRadio);

        radioGroup.add(sampleRadio);
        sampleRadio.setText("Sample");
        sampleRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sampleRadioActionPerformed(evt);
            }
        });
        add(sampleRadio);

        radioGroup.add(diffRadio);
        diffRadio.setText("Diff");
        diffRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diffRadioActionPerformed(evt);
            }
        });
        add(diffRadio);

        maskCheck.setText("Mask");
        maskCheck.setEnabled(false);
        add(maskCheck);

        focusButton.setText("Focus");
        focusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                focusButtonActionPerformed(evt);
            }
        });
        add(focusButton);
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Changes image in ImageView to sample image.
     *
     * @param evt event triggering method
     */
    private void sampleRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sampleRadioActionPerformed
        if (sampleRadio.isSelected()) {
            view.changeImage(ImagePool.SAMPLE);
            focusButton.setEnabled(false);
        }
    }//GEN-LAST:event_sampleRadioActionPerformed
    /**
     * Changes image in ImageView to pattern image.
     *
     * @param evt event triggering method
     */
    private void patternRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patternRadioActionPerformed
        if (patternRadio.isSelected()) {
            view.changeImage(ImagePool.PATTERN);
            focusButton.setEnabled(false);
        }
    }//GEN-LAST:event_patternRadioActionPerformed
    /**
     * Changes image in ImageView to diff image.
     *
     * @param evt event triggering method
     */
    private void diffRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diffRadioActionPerformed
        if (diffRadio.isSelected()) {
            view.changeImage(ImagePool.DIFF);
            focusButton.setEnabled(true);
        }
    }//GEN-LAST:event_diffRadioActionPerformed
    /**
     * Focuses on changed part of image in diff.
     *
     * @param evt event triggering method
     */
    private void focusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_focusButtonActionPerformed
        view.focus();
    }//GEN-LAST:event_focusButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton diffRadio;
    private javax.swing.JButton focusButton;
    private javax.swing.JCheckBox maskCheck;
    private javax.swing.JRadioButton patternRadio;
    private javax.swing.ButtonGroup radioGroup;
    private javax.swing.JRadioButton sampleRadio;
    // End of variables declaration//GEN-END:variables
}
