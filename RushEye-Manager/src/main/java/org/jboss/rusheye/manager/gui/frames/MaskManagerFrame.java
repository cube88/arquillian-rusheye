/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.jboss.rusheye.manager.gui.frames;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;
import javax.swing.tree.TreeSelectionModel;
import org.jboss.rusheye.manager.Main;
import org.jboss.rusheye.manager.gui.view.mask.converters.MaskConverter;
import org.jboss.rusheye.manager.gui.view.mask.converters.MaskToImageConverter;
import org.jboss.rusheye.manager.gui.view.mask.MaskCase;
import org.jboss.rusheye.manager.gui.view.mask.MaskType;
import org.jboss.rusheye.manager.utils.FileChooserUtils;

/**
 *
 * @author hcube
 */
public class MaskManagerFrame extends javax.swing.JFrame {

    private MaskConverter converter;

    /**
     * Creates new form MaskManagerFrame
     */
    public MaskManagerFrame() {
        initComponents();

        maskTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {

            public void valueChanged(TreeSelectionEvent tse) {
                System.out.println("AAA");
                putMaskIntoView();
                
            }
        });
    }

    public void createTree() {
        Main.maskFrame.setVisible(true);
        updateTreeModel();
    }

    public void updateTreeModel() {
        DefaultTreeModel model = new DefaultTreeModel(Main.mainProject.getMaskManager().getRoot());
        maskTree.setModel(model);
        maskTree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
        maskTree.setExpandsSelectedPaths(true);
        for (int i = 0; i < maskTree.getRowCount(); i++) {
            maskTree.expandRow(i);
        }
        this.validate();
    }

    public void putMaskIntoView() {
        MaskCase node = (MaskCase) maskTree.getLastSelectedPathComponent();

        if (node == null) {
            return;
        }

        if (node.getName().startsWith("Mask ")) {
            Main.mainProject.getMaskManager().setCurrentMask(node);
            infoTextArea.setText(node.getInfo());
            Main.interfaceFrame.repaint();
        }
        if (node.getName().startsWith("Rect ")) {
            infoTextArea.setText(node.getShape().toString());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        removeMaskButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        infoTextArea = new javax.swing.JTextArea();
        jRadioButton1 = new javax.swing.JRadioButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        maskTree = new javax.swing.JTree();
        addMaskButton = new javax.swing.JButton();
        saveMaskButton = new javax.swing.JButton();
        jRadioButton2 = new javax.swing.JRadioButton();

        setTitle("Mask Manager");

        removeMaskButton.setText("Remove");
        removeMaskButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeMaskButtonActionPerformed(evt);
            }
        });

        infoTextArea.setColumns(20);
        infoTextArea.setRows(5);
        jScrollPane2.setViewportView(infoTextArea);

        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Selective alpha");
        jRadioButton1.setEnabled(false);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        maskTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane3.setViewportView(maskTree);

        addMaskButton.setText("Add");
        addMaskButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMaskButtonActionPerformed(evt);
            }
        });

        saveMaskButton.setText("Save");
        saveMaskButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMaskButtonActionPerformed(evt);
            }
        });

        jRadioButton2.setText("other future mask type");
        jRadioButton2.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(removeMaskButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addMaskButton, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                    .addComponent(saveMaskButton, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton1)
                            .addComponent(jRadioButton2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addMaskButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeMaskButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveMaskButton)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton2)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addMaskButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMaskButtonActionPerformed
        MaskCase root = Main.mainProject.getMaskManager().getRoot();
        MaskCase newCase = new MaskCase();
        newCase.setName("Mask " + (root.getChildCount() + 1));
        newCase.setType(MaskType.SELECTIVE_ALPHA);

        root.addChild(newCase);

        this.updateTreeModel();

    }//GEN-LAST:event_addMaskButtonActionPerformed

    private void removeMaskButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeMaskButtonActionPerformed
        MaskCase root = Main.mainProject.getMaskManager().getRoot();

        MaskCase node = (MaskCase) maskTree.getLastSelectedPathComponent();
        TreePath path = maskTree.getSelectionPath();

        System.out.println("Try to remove ");
        if (!root.getAllChildren().remove(node)) {
            for (int i = 0; i < root.getChildCount(); ++i) {
                root.getAllChildren().get(i).getAllChildren().remove(node);
            }
        }

        this.updateTreeModel();

        maskTree.setSelectionPath(path.getParentPath());
        maskTree.scrollPathToVisible(path);
    }//GEN-LAST:event_removeMaskButtonActionPerformed

    private void saveMaskButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMaskButtonActionPerformed

        JFileChooser fc = FileChooserUtils.saveChooser();

        int returnVal = fc.showSaveDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            MaskCase node = (MaskCase) maskTree.getLastSelectedPathComponent();
            converter = new MaskToImageConverter(node);
            converter.save(file);
        }


    }//GEN-LAST:event_saveMaskButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addMaskButton;
    private javax.swing.JTextArea infoTextArea;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTree maskTree;
    private javax.swing.JButton removeMaskButton;
    private javax.swing.JButton saveMaskButton;
    // End of variables declaration//GEN-END:variables
}
