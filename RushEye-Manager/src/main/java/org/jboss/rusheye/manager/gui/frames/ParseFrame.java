/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.jboss.rusheye.manager.gui.frames;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.jboss.rusheye.manager.Main;
import org.jboss.rusheye.parser.ParserThread;
import org.jboss.rusheye.manager.project.observable.Observed;
import org.jboss.rusheye.manager.project.observable.Observer;
import org.jboss.rusheye.manager.utils.FileChooserUtils;
import org.jboss.rusheye.parser.ManagerParser;
import org.jboss.rusheye.suite.Properties;

/**
 * Frame where we can set parser parameters and run parsing.
 * 
 * @author Jakub D.
 */
public class ParseFrame extends javax.swing.JFrame implements Observer {

    /**
     * Creates new form ParseFrame
     */
    public ParseFrame() {
        initComponents();
        samplesField.setText(Main.mainProject.getSamplesPath());
        patternsField.setText(Main.mainProject.getPatternPath());
        masksField.setText(Main.mainProject.getMaskPath());
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        resultField = new javax.swing.JTextField();
        outputButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        samplesField = new javax.swing.JTextField();
        samplesButton = new javax.swing.JButton();
        patternsButton = new javax.swing.JButton();
        patternsField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        storageButton = new javax.swing.JButton();
        storageField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        masksButton = new javax.swing.JButton();
        masksField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        parseButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel1.setText("Result output file :");

        resultField.setText("result.xml");

        outputButton.setText("Set");
        outputButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Samples directory :");

        samplesButton.setText("Set");
        samplesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                samplesButtonActionPerformed(evt);
            }
        });

        patternsButton.setText("Set");
        patternsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patternsButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Patterns directory :");

        storageButton.setText("Set");
        storageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storageButtonActionPerformed(evt);
            }
        });

        storageField.setText("./tmp/");

        jLabel4.setText("File storage directory :");

        masksButton.setText("Set");
        masksButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masksButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Masks directory :");

        parseButton.setText("Parse");
        parseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSeparator2)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(parseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(resultField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(outputButton, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(samplesField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(samplesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(patternsField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(patternsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(storageField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(storageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(masksField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(masksButton, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resultField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outputButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patternsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patternsButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(samplesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(samplesButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(storageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(storageButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(masksField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(masksButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(parseButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Method run after parse button is pressed. Performs parse operation.
     *
     * @param evt event triggering method
     */
    private void parseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parseButtonActionPerformed
        Properties props = new Properties();

        if (!samplesField.getText().equals(""))
            props.setProperty("samples-directory", samplesField.getText());
        else {
            JOptionPane.showMessageDialog(this, "No samples path selected", "Parse", JOptionPane.WARNING_MESSAGE);
        }
        if (!patternsField.getText().equals("")) {
            props.setProperty("patterns-directory", patternsField.getText());
        } else {
            JOptionPane.showMessageDialog(this, "No patterns path selected", "Parse", JOptionPane.WARNING_MESSAGE);
        }
        props.setProperty("file-storage-directory", storageField.getText());
        props.setProperty("result-output-file", resultField.getText());

        if (!masksField.getText().equals(""))
            props.setProperty("masks-directory", masksField.getText());

        ManagerParser parser = new ManagerParser();
        parser.setProperties(props);
        new Thread(new ParserThread(parser)).start();

        Main.mainProject.setResultDescriptor(new File(resultField.getText()));

        this.dispose();
    }//GEN-LAST:event_parseButtonActionPerformed
    /**
     * Method run after set button for loading output path is pressed.
     *
     * @param evt event triggering method
     */
    private void outputButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputButtonActionPerformed
        JFileChooser fc = FileChooserUtils.saveChooser();

        int returnVal = fc.showSaveDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            resultField.setText(file.getAbsolutePath());
        }
    }//GEN-LAST:event_outputButtonActionPerformed
    /**
     * Method run after set button for loading samples path is pressed.
     *
     * @param evt event triggering method
     */
    private void samplesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_samplesButtonActionPerformed
        Main.interfaceFrame.setSamplesAction();
        samplesField.setText(Main.mainProject.getSamplesPath());
        this.show();
    }//GEN-LAST:event_samplesButtonActionPerformed
    /**
     * Method run after set button for loading patterns path is pressed.
     *
     * @param evt event triggering method
     */
    private void patternsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patternsButtonActionPerformed
        Main.interfaceFrame.setPatternsAction();
        patternsField.setText(Main.mainProject.getPatternPath());
        this.show();
    }//GEN-LAST:event_patternsButtonActionPerformed
    /**
     * Method run after set button for loading storage path is pressed.
     *
     * @param evt event triggering method
     */
    private void storageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storageButtonActionPerformed
        File dir = FileChooserUtils.openDir("Open Storage Dir", this);
        if (dir != null) {
            String path = dir.getAbsolutePath();
            if (path != null)
                storageField.setText(path);
        }
    }//GEN-LAST:event_storageButtonActionPerformed
    /**
     * Method run after set button for loading mask path is pressed.
     *
     * @param evt event triggering method
     */
    private void masksButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masksButtonActionPerformed
        File dir = FileChooserUtils.openDir("Open Masks Dir", this);
        if (dir != null) {
            String path = dir.getAbsolutePath();
            if (path != null) {
                Main.mainProject.setMaskPath(path);
                masksField.setText(path);
            }
        }
    }//GEN-LAST:event_masksButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton masksButton;
    private javax.swing.JTextField masksField;
    private javax.swing.JButton outputButton;
    private javax.swing.JButton parseButton;
    private javax.swing.JButton patternsButton;
    private javax.swing.JTextField patternsField;
    private javax.swing.JTextField resultField;
    private javax.swing.JButton samplesButton;
    private javax.swing.JTextField samplesField;
    private javax.swing.JButton storageButton;
    private javax.swing.JTextField storageField;
    // End of variables declaration//GEN-END:variables

    public void update(Observed o) {
        // TODO
    }
}
